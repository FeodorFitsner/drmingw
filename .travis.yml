language: cpp

env:
  global:
  - MAKEFLAGS=-j2

matrix:
  fast_finish: true
  include:
  - compiler: ": Win32"
    env:
    - APT_PACKAGES="binutils-mingw-w64-i686 gcc-mingw-w64-i686 g++-mingw-w64-i686"
    - MINGW_PREFIX=i686-w64-mingw32
    - DBGHELP_URL=https://www.googledrive.com/host/0B1mEXoWzDm1McE81WFBKTzd5Z3M
  - compiler: ": Win64"
    env:
    - APT_PACKAGES="binutils-mingw-w64-x86-64 gcc-mingw-w64-x86-64 g++-mingw-w64-x86-64"
    - MINGW_PREFIX=x86_64-w64-mingw32
    - DBGHELP_URL=https://www.googledrive.com/host/0B1mEXoWzDm1MaGlUZ0syNEduTGs

before_install:
- sudo apt-get update -qq
- sudo apt-get install -qq --no-install-recommends p7zip-full
- sudo apt-get install -qq --no-install-recommends $APT_PACKAGES
- sudo apt-get install -qq --no-install-recommends wine

script:
- echo "set (CMAKE_SYSTEM_NAME Windows)" > Toolchain.cmake
- echo "set (CMAKE_C_COMPILER $MINGW_PREFIX-gcc)" >> Toolchain.cmake
- echo "set (CMAKE_CXX_COMPILER $MINGW_PREFIX-g++)" >> Toolchain.cmake
- echo "set (CMAKE_RC_COMPILER $MINGW_PREFIX-windres)" >> Toolchain.cmake
- echo "set (CMAKE_FIND_ROOT_PATH /usr/$MINGW_PREFIX)" >> Toolchain.cmake
- echo "set (CMAKE_FIND_ROOT_PATH_MODE_PROGRAM NEVER)" >> Toolchain.cmake
- echo "set (CMAKE_FIND_ROOT_PATH_MODE_LIBRARY ONLY)" >> Toolchain.cmake
- echo "set (CMAKE_FIND_ROOT_PATH_MODE_INCLUDE ONLY)" >> Toolchain.cmake
- wget -q -O dbghelp.7z "$DBGHELP_URL"
- 7z x -othirdparty/dbghelp/ dbghelp.7z
- cmake -H. -Bbuild -DCMAKE_TOOLCHAIN_FILE=Toolchain.cmake -DWINDBG_DIR=thirdparty/dbghelp
- cmake --build build --use-stderr -- all test package

deploy:
  provider: releases
  api_key:
    secure: frTz8L+ex+foqv1fpVJX9guW/YHftxhjJ3SKwcfLmIW/NP77FVLgF8PgyLyPVbRkUOoSZpNYGQcWEpOF3bEK5HbeQScuV75TgSO2n2Ie4UqMO7+4G3bY5+Ni/SvfA/qt7krZQeNc0wCtPX+QjD4HLmSXfnie6PMZw/q5pkjN9fI=
  file_glob: true
  file: build/drmingw-*.zip
  on:
    repo: jrfonseca/drmingw
    all_branches: true
